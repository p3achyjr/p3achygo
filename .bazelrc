common --experimental_repo_remote_exec

build --apple_platform_type=macos
build --announce_rc
build --experimental_cc_shared_library
build --keep_going
build --cxxopt=-std=c++17
build --host_cxxopt=-std=c++17
build --enable_platform_specific_config
build --verbose_failures=true
build --spawn_strategy=standalone
build --genrule_strategy=standalone

build --define=grpc_no_ares=true

build --define=tsl_link_protobuf=true

# Disable enabled-by-default TensorFlow features that we don't care about.
build --define=no_aws_support=true
build --define=no_kafka_support=true
build --define=no_ignite_support=true

build --crosstool_top=//toolchain:clang_suite
# build --host_crosstool_top=@bazel_tools//tools/cpp:toolchain

# Tensorflow flags to enable speedup
build --copt -march=native
build --copt -mavx

# Use lld
build --linkopt=-fuse-ld=lld

# Adding "--cxxopt=-D_GLIBCXX_USE_CXX11_ABI=0" creates parity with TF
# compilation options. It also addresses memory use due to
# copy-on-write semantics of std::strings of the older ABI.
# build --cxxopt=-D_GLIBCXX_USE_CXX11_ABI=0

build:macos --cpu=darwin

build:linux --cpu=k8

# This config refers to building CUDA op kernels with nvcc.
# build:cuda --repo_env TF_NEED_CUDA=1
# build:cuda --crosstool_top=@local_config_cuda//crosstool:toolchain
# build:cuda --@local_config_cuda//:enable_cuda

# build:gpu_base --config=cuda
# build:gpu_base --action_env=TF_CUDA_VERSION="11"
# build:gpu_base --action_env=TF_CUDNN_VERSION="8"
# build:gpu_base --repo_env=TF_CUDA_COMPUTE_CAPABILITIES="sm_35,sm_50,sm_60,sm_70,sm_75,compute_80"

# build:gpu_linux --config=gpu_base
# # build:gpu_linux --config=tensorrt
# build:gpu_linux --action_env=CUDA_TOOLKIT_PATH="/usr/local/cuda"
# build:gpu_linux --action_env=LD_LIBRARY_PATH="/usr/local/cuda:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda-11.1/lib64:/usr/local/tensorrt/lib"
# build:gpu_linux --action_env=GCC_HOST_COMPILER_PATH="/usr/bin/gcc"

build:asan --strip=never
build:asan --spawn_strategy=local
build:asan --copt -fsanitize=address
build:asan --copt -DADDRESS_SANITIZER
build:asan --copt -O1
build:asan --copt -g
build:asan --copt -fno-omit-frame-pointer
build:asan --copt -fno-sanitize-blacklist
build:asan --linkopt -fsanitize=address

build:debug --copt -g
build:debug --copt -fstandalone-debug
build:debug --compilation_mode=dbg

build:opt --compilation_mode=opt

build:o3 --compilation_mode=opt
build:o3 --copt -O3

build:ofast --compilation_mode=opt
build:ofast --copt -Ofast
